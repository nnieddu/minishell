# MINISHELL-TESTER

# all == tous les tests

# 42 == tests du sujet de correction
# error == tests qui ne passent pas

# exec == tests d'execution, redirections, pipes
# input == tests de la syntax
# token == tests des tokens

# echo == tests du builtins echo
# cd == tests du builtins cd
# pwd == tests du builtins pwd
# export == tests du builtins export
# unset == tests du builtins unset
# env == tests du builtins env
# exit == tests du builtins exit

RESET="\033[0m"
BLACK="\033[30m"
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
MAGENTA="\033[35m"
CYAN="\033[36m"
WHITE="\033[37m"

BOLDBLACK="\033[1m\033[30m"
BOLDRED="\033[1m\033[31m"
BOLDGREEN="\033[1m\033[32m"
BOLDYELLOW="\033[1m\033[33m"
BOLDBLUE="\033[1m\033[34m"
BOLDMAGENTA="\033[1m\033[35m"
BOLDCYAN="\033[1m\033[36m"
BOLDWHITE="\033[1m\033[37m"

chmod 755 minishell
# FILES=$(ls | tr "\n" " ")
# echo $FILES

function exec_test()
{
	TEST1=$(echo $@ "; exit" | ./minishell 2>&-)
	ES_1=$?
	TEST2=$(echo $@ "; exit" | bash 2>&-)
	ES_2=$?
	if [ "$TEST1" == "$TEST2" ] && [ "$ES_1" == "$ES_2" ]; then
		printf " $BOLDGREEN%s$RESET" "✓ "
	else
		printf " $BOLDRED%s$RESET" "✗ "
	fi
	printf "$CYAN |$@| $RESET"
	if [ "$TEST1" != "$TEST2" ]; then
		echo
		echo
		printf $BOLDRED"Your output : \n%.20s\n$BOLDRED$TEST1\n%.20s$RESET\n" "-----------------------------------------" "-----------------------------------------"
		printf $BOLDGREEN"Expected output : \n%.20s\n$BOLDGREEN$TEST2\n%.20s$RESET\n" "-----------------------------------------" "-----------------------------------------"
	fi
	if [ "$ES_1" != "$ES_2" ]; then
		echo
		echo
		printf $BOLDRED"Your exit status : $BOLDRED$ES_1$RESET\n"
		printf $BOLDGREEN"Expected exit status : $BOLDGREEN$ES_2$RESET\n"
	fi
	MESS1=$(echo $@ | ./minishell 2>&1 | head -n 1)
	MESS1=${MESS1#*minishell:}
	MESS1=${MESS1%exit*}
	MESS2=$(echo $@ | bash 2>&1 | head -n 1)
	MESS2=${MESS2#*bash: line 1:}
	MESS2=${MESS2#*bash: line 2:}
	MESS2=${MESS2#*bash: line 3:}
	if [ "$MESS1" != "$MESS2" ]; then
		echo
		echo
		printf $BOLDYELLOW"STDERR: "$BOLDRED"Your exit message : $BOLDRED$MESS1$RESET\n"
		printf $BOLDYELLOW"STDERR: "$BOLDGREEN"Expected exit message : $BOLDGREEN$MESS2$RESET\n"
	fi
	echo
	sleep 0.1
}

# ## exec_test 'cat /dev/random | head -c 100 | wc -c'

# # TESTS QUI PASSENT PAS
if [ "$1" == "error" ] || [ "$1" == "all" ]; then
	exec_test 'ls | < file2'
fi

### TESTS SUJET DE CORRECTION OLD
if [ "$1" == "42" ] || [ "$1" == "all" ]; then
	exec_test 'foo'
	exec_test '/bin/ls -lsF'
	exec_test '/bin/ls -l -a -F'
	exec_test 'exit'
	exec_test 'echo "it works"'
	exec_test 'echo it works'
	exec_test 'cd /bin/pwd ; /bin/pwd'
	exec_test 'cd incs/ ; /bin/pwd'
	exec_test 'setenv FOO bar'
	exec_test 'setenv FOO=bar'
	exec_test 'unsetenv PATH ; ls'
	exec_test 'unsetenv PATH ; /bin/ls'
	exec_test 'emacs'
	exec_test ' 	   '
	exec_test '			ls 		-la 	   '
fi

### TESTS SUJET DE CORRECTION NEW
if [ "$1" == "guideline" ] || [ "$1" == "all" ]; then
	exec_test "/bin/ls"
	exec_test "/bin/cat"
	exec_test "/bin/date"
	exec_test "/bin/top"
	exec_test "/bin/clear"
	exec_test "/bin/sleep"

	exec_test "/bin/ls -la"
	exec_test "/bin/ls -R"
	exec_test "/bin/cat --help"
	exec_test "/bin/mkdir -p dir"
	exec_test "/bin/cp -r dir dircopy"
	exec_test "/bin/date -r"
	exec_test "/bin/rm -r dircopy"

	exec_test "echo"
	exec_test "echo \"\""
	exec_test "echo ''"
	exec_test "echo salut"
	exec_test "echo -n salut"
	exec_test "echo \$USER"
	exec_test "echo \$USER\$SHLVL\$LOGNAME"

	exec_test "exit"
	exec_test "exit ''"
	exec_test "exit \"\""
	exec_test "exit 0"
	exec_test "exit 10"
	exec_test "exit 310"
	exec_test "exit -50"
	exec_test "exit -360"
	exec_test "exit abc"
	exec_test "exit 13a"

	exec_test "/bin/ls filenoexist; echo \$?"
	exec_test "/bin/cat filenoexist; echo \$?"
	exec_test "/bin/mkdir incs; echo \$?"
	exec_test "/bin/grep noexistoption; echo \$?"
	exec_test "/bin/ls noexistoption; echo \$?"
	exec_test "/bin/mv nodirexist1 nodirexist2"

	exec_test "/bin/ls -R;/bin/ls -la"
	exec_test "/bin/ls -R ;/bin/ls -la"
	exec_test "/bin/ls -R; /bin/ls -la"
	exec_test "/bin/ls -R ; /bin/ls -la"
	exec_test "/bin/ls -R   ; /bin/ls -la"
	exec_test "/bin/date -R;/bin/date -r"
	exec_test "/bin/date -R ;/bin/date -r"
	exec_test "/bin/date -R; /bin/date -r"
	exec_test "/bin/date -R   ; /bin/date -r"

	exec_test "\"/bin/ls -R;/bin/ls -la"
	exec_test "\"/bin/ls -R\" ;/bin/ls -la"
	exec_test "\"/bin/ls -R; /bin/ls -la"
	exec_test "\"/bin/ls -R \"; /bin/ls -la"
	exec_test "\"/bin/ls -R   \"; /bin/ls -la"
	exec_test "/bin/date -R;\"/bin/date -r\""
	exec_test "/bin/date -R ;\"/bin/date -r\""
	exec_test "/bin/date -R;\" /bin/date -r\""
	exec_test "/bin/date -R   ;\" /bin/date -r\""
	exec_test "\\/bin/touch \"\"\"/bin/ls"
	exec_test "\\\\/bin/touch \" \" ;\"/bin/touch"
	exec_test "'\\\\\\/bin/touch \";\" /bin/touch'"
	exec_test "'\\\\\\\\/bin/touch \'   ;\" /bin/touch'"

	# exec_test "env"
	# exec_test "export VAR; env"
	# exec_test "export VAR; export"
	# exec_test "export VAR=Contenu; env"
	# exec_test "export VAR=Contenu; export"
	# exec_test "export VAR=; env"
	# exec_test "export VAR=; export"
	# exec_test "export LOGNAME=Correcteur; env"
	# exec_test "export LOGNAME=Correcteur; export"
	# exec_test "unset VAR LOGNAME; env"
	# exec_test "unset VAR LOGNAME; export"
	# exec_test "unset PATH; env"
	# exec_test "unset PATH; export"
	# exec_test "unset PWD LOGNAME; env"
	# exec_test "unset PWD LOGNAME; export"

	exec_test "echo \abc"
	exec_test "echo \\\abc"
	exec_test "echo \\\\\\\abc"
	exec_test "echo \\\\\\\\\\\abc"
	exec_test "echo $"
	exec_test "echo a  $"
	exec_test "echo $  a"
	exec_test "echo \'a  $\'"
	exec_test "echo \"a  $\""
	exec_test "echo \$USER"
	exec_test "echo \\\$USER"
	exec_test "echo \\\\\\\$USER"
	exec_test "echo \\\\\\\\\\\$USER"
	exec_test "echo \\\\\\\\\\\\\\\$USER"
	exec_test "echo '\abc'"
	exec_test "echo '\\\abc'"
	exec_test "echo '\\\\\\\abc'"
	exec_test "echo '\\\\\\\\\\\abc'"
	exec_test "echo '$'"
	exec_test "echo 'a  $'"
	exec_test "echo '$  a'"
	exec_test "echo '\'a  $\''"
	exec_test "echo '\"a  $\"'"
	exec_test "echo '\$USER'"
	exec_test "echo '\\\$USER'"
	exec_test "echo '\\\\\\\$USER'"
	exec_test "echo '\\\\\\\\\\\$USER'"
	exec_test "echo '\\\\\\\\\\\\\\\$USER'"
	exec_test "echo \"\abc\""
	exec_test "echo \"\\\abc\""
	exec_test "echo \"\\\\\\\abc\""
	exec_test "echo \"\\\\\\\\\\\abc\""
	exec_test "echo \"$\""
	exec_test "echo \"a  $\""
	exec_test "echo \"$  a\""
	exec_test "echo \"\'a  $\'\""
	exec_test "echo \"\"a  $\"\""
	exec_test "echo \"\$USER\""
	exec_test "echo \"\\\$USER\""
	exec_test "echo \"\\\\\\\$USER\""
	exec_test "echo \"\\\\\\\\\\\$USER\""
	exec_test "echo \"\\\\\\\\\\\\\\\$USER\""

	exec_test "cd ~"
	exec_test "cd incs"
	exec_test "cd /bin/"
	exec_test "mdkir ./dir ; chmod 000 ./dir; cd ./dir"
	exec_test "cd ."
	exec_test "cd .."
	exec_test "cd /"
	exec_test "cd /Users"
	exec_test "cd ./minishell"

	exec_test "pwd"
	exec_test "pwd incs"
	exec_test "cd incs ; pwd"
	exec_test "cd ../../incs ; pwd"
	exec_test "pwd 123"
	exec_test "export PWD=1; pwd"
	exec_test "unset PWD; pwd"

	exec_test "."
	exec_test ".."
	exec_test "/"
	exec_test "ls ../../../"
	exec_test "ls ~/Desktop"
	exec_test "ls ../\$HOME"
	exec_test "cd \$PWD"
	exec_test "mkdir a; mkdir a/b; mkdir a/b/c; mkdir a/b/c/d; mkdir a/b/c/d/e; cd a/b/c/d/e ; cd ../../../../../"

	exec_test "ls"
	exec_test "unset PATH; ls"
	exec_test "unset PATH; mkdir dir"
	exec_test "unset PATH; date"
	exec_test "unset PATH; top"
	exec_test "ls"
	exec_test "unset PATH; export PATH ; ls"
	exec_test "unset PATH; export PATH= ; mkdir dir"
	exec_test "unset PATH; export PATH=/noexist1:/noexist2:/noexist3; date"
	exec_test "unset PATH; export PATH=/bin/:/sbin/ ; top"

	exec_test "echo ';'"
	exec_test "echo '\$USER'"
	exec_test "echo '\\ \$USER'"
	exec_test "echo '\\\\ \$USER'"
	exec_test "echo '\\\\\ \$USER'"
	exec_test "echo '> fail redir'"
	exec_test "echo '\\> fail redir'"
	exec_test "echo '123\''"

	exec_test "ls > out"
	exec_test "ls > out ; cat < out"
	exec_test "ls > out1 ; cat < out1 > out2"
	exec_test "ls > out1 >> out2"
	exec_test "ls > out1 > out2 > out3"
	exec_test "ls > out1; ls >> out2 >> out3"
	exec_test "ls | rev | sort | rev | head -n 1 > out"
	exec_test "ls > out1 | rev < out1 | sort | rev > out1 | wc"
	exec_test "ls | grep e | sort | rev > out1 | wc"
	exec_test "echo 'abcdef' | rev > out1"
fi

### EXECUCTIONS
if [ "$1" == "exec" ] || [ "$1" == "all" ]; then
	exec_test ""
	exec_test """"
	exec_test "''"
	exec_test "\$VAR"
	exec_test "\$USER"
	exec_test "unset PATH ; ls"
	exec_test "unset PATH ; echo"
	exec_test "> a"
	exec_test "> a ''"
	exec_test "> a \"\""
	exec_test "| test"
	exec_test "| test"
	exec_test "\" echo\""
	exec_test "echo\ "
	exec_test "echo\ a"
	exec_test "echo > <"
	exec_test "echo | |"
	exec_test "<"
	exec_test "echo bonjour >>> test"
	exec_test "echo bonjour > > out"
	exec_test "ls><abc"

	exec_test "> test | echo blabla;"
	exec_test "echo testing multi ; echo \"test 1 ; | and 2\" ; cat tests/lorem.txt | grep Lorem"
	exec_test "echo bonjour | grep o"
	exec_test "echo bonjour | grep o | wc -l"
	exec_test "cat < fd | wc"
	exec_test "cat | cat | cat | ls"
	exec_test "cat tests/lorem.txt | grep arcu | cat -e"
	exec_test "ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out | ls >> out"
	exec_test "echo test | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e |cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e |  cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e | cat -e"
	exec_test "ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls | ls"
	exec_test "ls > out ; ls"
	exec_test "ls > out ; cat out"
	exec_test "ls > out | wc ; ls"
	exec_test "ls > out | wc ; cat out"
	exec_test "ls > out ; cat < out | wc l ; ls"
	exec_test "ls > out ; cat < out | wc l ; cat out"
	exec_test "ls > out ; cat out | wc > out ; ls"
	exec_test "ls > out ; cat out | wc > out ; cat out"
	exec_test "ls > out ; cat < out | wc > out ; ls"
	exec_test "ls > out ; cat < out | wc > out ; cat out"
	exec_test "echo Salut \$USER > out ; ls"
	exec_test "echo Salut \$USER > out ; cat out"
	exec_test "echo Salut \$USER > out ; cat < out"
	exec_test "echo test > out ; ls"
	exec_test "echo test > out ; cat out"
	exec_test "echo test > out >> out >> out ; echo test >> out ; ls"
	exec_test "echo test > out >> out >> out ; echo test >> out ; cat out"
	exec_test "echo test > out1 >> out2 >> out3 ; echo test >> out3 ; ls"
	exec_test "echo test > out1 >> out2 >> out3 ; echo test >> out3 ; cat out1 ; cat out2 ; cat out3"
	exec_test "< noexist"
	exec_test "touch exist ; < exist"
	exec_test "touch exist ; > exist ; ls"
	exec_test "touch exist ; > exist ; cat exist"
	exec_test "touch exist ; >> exist ; ls"
	exec_test "touch exist ; >> exist ; cat exist"
	exec_test "< noexist"
	exec_test "cat < noexist"
	exec_test "> exist ; ls"
	exec_test "> exist ; cat exist"
	exec_test ">> exist ; ls"
	exec_test ">> exist ; cat exist"
	exec_test "cat < ls"
	exec_test "cat < ls > ls"
	exec_test "cat < nimp | wc"
	exec_test "cat > nimp | wc | rev | wc"
	exec_test "cat > nimp | wc | rev | wc < nimp"
	exec_test "cat > nimp | wc | rev | wc > out ; ls"
	exec_test "cat > nimp | wc | rev | wc > out ; cat out"
	exec_test "cat > nimp | wc | rev | wc >> out ; ls"
	exec_test "cat > nimp | wc | rev | wc >> out ; cat out"
	exec_test "ls >> nimp | wc | cat nimp"
	exec_test "> lol echo test lol; cat lol"
	exec_test ">lol echo > test>lol>test>>lol>test mdr >lol test >test; cat test"
	exec_test "cat < in1 > out2 | grep < in2 | head -n 5 > out3 | wc -w"
	exec_test "ls > in1 | cat < in1 > out2 | grep < in1 | head -n 5 > out3 | wc -w"
	exec_test "ls > in1 | cat < in1 > out2 | grep < in1 | head -n 5 > out3 | wc -w ; ls"
	exec_test "ls > in1 | cat < in1 > out2 | grep < in1 | head -n 5 > out3 | wc -w ; cat in1 ; cat out2 ; cat out3"
	exec_test "> a ls > b < Makefile"
	exec_test "<a cat <b <c"

	exec_test "unset PATH; ls"
	exec_test "unset PATH; echo"
	exec_test "unset PATH; mkdir"
	exec_test "unset PATH; sudo"
	exec_test "unset PATH; export PATH ls"
	exec_test "unset PATH; export PATH echo"
	exec_test "unset PATH; export PATH mkdir"
	exec_test "unset PATH; export PATH sudo"
	exec_test "unset PATH; export PATH= ls"
	exec_test "unset PATH; export PATH= echo"
	exec_test "unset PATH; export PATH= mkdir"
	exec_test "unset PATH; export PATH= sudo"
	exec_test "unset PATH; export PATH=. ls"
	exec_test "unset PATH; export PATH=. echo"
	exec_test "unset PATH; export PATH=. mkdir"
	exec_test "unset PATH; export PATH=. sudo"
	exec_test "unset PATH; export PATH=./ ls"
	exec_test "unset PATH; export PATH=./ echo"
	exec_test "unset PATH; export PATH=./ mkdir"
	exec_test "unset PATH; export PATH=./ sudo"
	exec_test "unset PATH; export PATH=.. ls"
	exec_test "unset PATH; export PATH=.. echo"
	exec_test "unset PATH; export PATH=.. mkdir"
	exec_test "unset PATH; export PATH=.. sudo"
	exec_test "unset PATH; export PATH=../ ls"
	exec_test "unset PATH; export PATH=../ echo"
	exec_test "unset PATH; export PATH=../ mkdir"
	exec_test "unset PATH; export PATH=../ sudo"
	exec_test "unset PATH; export PATH=/noexist ls"
	exec_test "unset PATH; export PATH=/noexist echo"
	exec_test "unset PATH; export PATH=/noexist mkdir"
	exec_test "unset PATH; export PATH=/noexist sudo"
	exec_test "unset PATH; export PATH=/ ls"
	exec_test "unset PATH; export PATH=/ echo"
	exec_test "unset PATH; export PATH=/ mkdir"
	exec_test "unset PATH; export PATH=/ sudo"
	exec_test "unset PATH; export PATH=/bin ls"
	exec_test "unset PATH; export PATH=/bin echo"
	exec_test "unset PATH; export PATH=/bin mkdir"
	exec_test "unset PATH; export PATH=/bin sudo"
	exec_test "unset PATH; export PATH=/bin/ ls"
	exec_test "unset PATH; export PATH=/bin/ echo"
	exec_test "unset PATH; export PATH=/bin/ mkdir"
	exec_test "unset PATH; export PATH=/bin/ sudo"
fi

### PARSING INPUT
if [ "$1" == "input" ] || [ "$1" == "all" ]; then
	if [ -z "$2" ] || [ "$2" == "1" ] || [ "$1" == "all" ]; then
		exec_test ""
		exec_test "'"
		exec_test " "
		exec_test ";"
		exec_test ">>"
		exec_test "|"
		exec_test "||"
		exec_test "&"
		exec_test "&&"
		exec_test "\\\;"
		exec_test "\\\ "
		exec_test "\\\>>"
		exec_test "\\\|"
		exec_test "\\\||"
		exec_test "\\\&"
		exec_test "\\\&&"
		exec_test "\\\\\\;"
		exec_test "\\\\\\ "
		exec_test "\\\\\\>>"
		exec_test "\\\\\\|"
		exec_test "\\\\\\||"
		exec_test "\\\\\\&"
		exec_test "\\\\\\&&"
		exec_test "\\\\\\\\\\\;"
		exec_test "\\\\\\\\\\\ "
		exec_test "\\\\\\\\\\\>>"
		exec_test "\\\\\\\\\\\|"
		exec_test "\\\\\\\\\\\||"
		exec_test "\\\\\\\\\\\&"
		exec_test "\\\\\\\\\\\&&"
		exec_test "/"
		exec_test "//"
		exec_test "\\"
		exec_test "\\\\"
		exec_test "\\\\\\\\"
		exec_test "; ;"
		exec_test ";;"
		exec_test ";;;"
		exec_test "; ;;"
		exec_test ";; ;"
		exec_test "> >>"
		exec_test ">> >"
		exec_test ">> >>"
		exec_test ">>>>>>"
		exec_test ">> >>>>"
		exec_test " < ;"
		exec_test " < &"
		exec_test " < |"
		exec_test "| ;"
		exec_test "|  < ../out ; rm ../out"
		exec_test "| > ../out ; rm ../out"
		exec_test "| >> ../out ; rm ../out"
		exec_test "| &"
		exec_test "| |"
		exec_test "| ls"
		exec_test "& ;"
		exec_test "&  < ../out ; rm ../out"
		exec_test "& > ../out ; rm ../out"
		exec_test "& >> ../out ; rm ../out"
		exec_test "& &"
		exec_test "& |"
		exec_test "ls ;"
		exec_test "ls ; ls"
		exec_test "ls ; ; ls"
		exec_test "ls ;; ls"
		exec_test "ls ; |"
		exec_test "ls ; > ../out ; rm ../out"
		exec_test "ls ;; > ../out ; rm ../out"
		exec_test "ls |"
		exec_test "ls ||"
		exec_test "ls |  < ../out ; rm ../out"
		exec_test "ls | > ../out ; rm ../out"
		exec_test "ls | >> ../out ; rm ../out"
		exec_test "ls &"
		exec_test "ls &&"
		exec_test "ls | grep e >"
		exec_test "ls | grep e > ../out ; rm ../out"
		exec_test "ls | grep e > ../out | ; rm ../out"
		exec_test "ls | grep e > ../out & ; rm ../out"
		exec_test "ls &  < ../out ; rm ../out"
		exec_test "ls & > ../out ; rm ../out"
		exec_test "ls & >> ../out ; rm ../out"
		exec_test "; ls"
		exec_test "; ls ls"
		exec_test "; ; ls"
		exec_test ";; ls"
		exec_test "; ls |"
		exec_test "; | ls"
		exec_test "; ls > ../out ; rm ../out"
		exec_test "| ls  < ../out ; rm ../out"
		exec_test "| ls > ../out ; rm ../out"
		exec_test "| ls >> ../out ; rm ../out"
		exec_test "& ls"
		exec_test "&& ls"
		exec_test "& ls  < ../out ; rm ../out"
		exec_test "& ls > ../out ; rm ../out"
		exec_test "& ls >> ../out ; rm ../out"
		exec_test "ls | ; ../out ; rm ../out"
		exec_test "ls | | ../out ; rm ../out"
		exec_test "ls | || ../out ; rm ../out"
		exec_test "ls | & ../out ; rm ../out"
		exec_test "ls | && ../out ; rm ../out"
		exec_test "ls ;  < ../out ; rm ../out"
		exec_test "ls ; >> ../out ; rm ../out"
		exec_test "ls ; ; ../out ; rm ../out"
		exec_test "ls ; | ../out ; rm ../out"
		exec_test "ls ; || ../out ; rm ../out"
		exec_test "ls ; & ../out ; rm ../out"
		exec_test "ls ; && ../out ; rm ../out"
		exec_test "ls >  < ../out ; rm ../out"
		exec_test "ls > > ../out ; rm ../out"
		exec_test "ls > >> ../out ; rm ../out"
		exec_test "ls > ; ../out ; rm ../out"
		exec_test "ls > | ../out ; rm ../out"
		exec_test "ls > || ../out ; rm ../out"
		exec_test "ls > & ../out ; rm ../out"
		exec_test "ls > && ../out ; rm ../out"
		exec_test "ls  < | ../out ; rm ../out"
		exec_test "ls >> | ../out ; rm ../out"
		exec_test "ls || | ../out ; rm ../out"
		exec_test "ls & | ../out ; rm ../out"
		exec_test "ls && | ../out ; rm ../out"
		exec_test "ls  < ; ../out ; rm ../out"
		exec_test "ls >> ; ../out ; rm ../out"
		exec_test "ls || ; ../out ; rm ../out"
		exec_test "ls & ; ../out ; rm ../out"
		exec_test "ls && ; ../out ; rm ../out"
		exec_test "ls  < > ../out ; rm ../out"
		exec_test "ls >> > ../out ; rm ../out"
		exec_test "ls || > ../out ; rm ../out"
		exec_test "ls && > ../out ; rm ../out"
		exec_test "ls '|' grep e > /out"
		exec_test "ls | 'grep e' > /out ; rm /out"
		exec_test "ls '| grep e' > /out ; rm /out"
		exec_test "ls '| grep e > /out' ; rm /out"
		exec_test "ls '|' grep e > .out"
		exec_test "ls | 'grep e' > .out ; rm .out"
		exec_test "ls '| grep e' > .out ; rm .out"
		exec_test "ls '| grep e > .out' ; rm .out"
		exec_test "ls '|' grep e > ./out"
		exec_test "ls | 'grep e' > ./out ; rm ./out"
		exec_test "ls '| grep e' > ./out ; rm ./out"
		exec_test "ls '| grep e > ./out' ; rm ./out"
		exec_test "ls '|' grep e > ../out"
		exec_test "ls | 'grep e' > ../out ; rm ../out"
		exec_test "ls '| grep e' > ../out ; rm ../out"
		exec_test "ls '| grep e > ../out' ; rm ../out"
		exec_test "ls \"|\" grep e > ../out"
		exec_test "ls | \"grep e\" > ../out ; rm ../out"
		exec_test "ls \"| grep e\" > ../out ; rm ../out"
		exec_test "ls \"| grep e > ../out\" ; rm ../out"
		exec_test "ls>out;cat<out|grep e|wc"
		exec_test "echo\>out|grep o|"
	fi

	if [ -z "$2" ] || [ "$2" == "2" ] || [ "$1" == "all" ]; then
		exec_test "''"
		exec_test "'''"
		exec_test "' '"
		exec_test "';'"
		exec_test "'>>'"
		exec_test "'|'"
		exec_test "'||'"
		exec_test "'&'"
		exec_test "'&&'"
		exec_test "'\\\;'"
		exec_test "'\\\ '"
		exec_test "'\\\>>'"
		exec_test "'\\\|'"
		exec_test "'\\\||'"
		exec_test "'\\\&'"
		exec_test "'\\\&&'"
		exec_test "'\\\\\\;'"
		exec_test "'\\\\\\ '"
		exec_test "'\\\\\\>>'"
		exec_test "'\\\\\\|'"
		exec_test "'\\\\\\||'"
		exec_test "'\\\\\\&'"
		exec_test "'\\\\\\&&'"
		exec_test "'\\\\\\\\\\\;'"
		exec_test "'\\\\\\\\\\\ '"
		exec_test "'\\\\\\\\\\\>>'"
		exec_test "'\\\\\\\\\\\|'"
		exec_test "'\\\\\\\\\\\||'"
		exec_test "'\\\\\\\\\\\&'"
		exec_test "'\\\\\\\\\\\&&'"
		exec_test "'/'"
		exec_test "'//'"
		exec_test "'\\'"
		exec_test "'\\\\'"
		exec_test "'\\\\\\\\'"
		exec_test "'; ;'"
		exec_test "';;'"
		exec_test "';;;'"
		exec_test "'; ;;'"
		exec_test "';; ;'"
		exec_test "'> >>'"
		exec_test "'>> >'"
		exec_test "'>> >>'"
		exec_test "'>>>>>>'"
		exec_test "'>> >>>>'"
		exec_test "' < ;'"
		exec_test "' < &'"
		exec_test "' < |'"
		exec_test "'| ;'"
		exec_test "'|  < ../out' ; rm ../out"
		exec_test "'| > ../out' ; rm ../out"
		exec_test "'| >> ../out' ; rm ../out"
		exec_test "'| &'"
		exec_test "'| |'"
		exec_test "'| ls'"
		exec_test "'& ;'"
		exec_test "'&  < ../out' ; rm ../out"
		exec_test "'& > ../out' ; rm ../out"
		exec_test "'& >> ../out' ; rm ../out"
		exec_test "'& &'"
		exec_test "'& |'"
		exec_test "'ls ;'"
		exec_test "'ls ; ls'"
		exec_test "'ls ; ; ls'"
		exec_test "'ls ;; ls'"
		exec_test "'ls ; |'"
		exec_test "'ls ; > ../out' ; rm ../out"
		exec_test "'ls ;; > ../out' ; rm ../out"
		exec_test "'ls |'"
		exec_test "'ls ||'"
		exec_test "'ls |  < ../out' ; rm ../out"
		exec_test "'ls | > ../out' ; rm ../out"
		exec_test "'ls | >> ../out' ; rm ../out"
		exec_test "'ls &'"
		exec_test "'ls &&'"
		exec_test "'ls | grep e >'"
		exec_test "'ls | grep e > ../out' ; rm ../out"
		exec_test "'ls | grep e > ../out |' ; rm ../out"
		exec_test "'ls | grep e > ../out &' ; rm ../out"
		exec_test "'ls &  < ../out' ; rm ../out"
		exec_test "'ls & > ../out' ; rm ../out"
		exec_test "'ls & >> ../out' ; rm ../out"
		exec_test "'; ls'"
		exec_test "'; ls ls'"
		exec_test "'; ; ls'"
		exec_test "';; ls'"
		exec_test "'; ls |'"
		exec_test "'; | ls'"
		exec_test "'; ls > ../out' ; rm ../out"
		exec_test "'| ls  < ../out' ; rm ../out"
		exec_test "'| ls > ../out' ; rm ../out"
		exec_test "'| ls >> ../out' ; rm ../out"
		exec_test "'& ls'"
		exec_test "'&& ls'"
		exec_test "'& ls  < ../out' ; rm ../out"
		exec_test "'& ls > ../out' ; rm ../out"
		exec_test "'& ls >> ../out' ; rm ../out"
		exec_test "'ls | ; ../out' ; rm ../out"
		exec_test "'ls | | ../out' ; rm ../out"
		exec_test "'ls | || ../out' ; rm ../out"
		exec_test "'ls | & ../out' ; rm ../out"
		exec_test "'ls | && ../out' ; rm ../out"
		exec_test "'ls ;  < ../out' ; rm ../out"
		exec_test "'ls ; >> ../out' ; rm ../out"
		exec_test "'ls ; ; ../out' ; rm ../out"
		exec_test "'ls ; | ../out' ; rm ../out"
		exec_test "'ls ; || ../out' ; rm ../out"
		exec_test "'ls ; & ../out' ; rm ../out"
		exec_test "'ls ; && ../out' ; rm ../out"
		exec_test "'ls >  < ../out' ; rm ../out"
		exec_test "'ls > > ../out' ; rm ../out"
		exec_test "'ls > >> ../out' ; rm ../out"
		exec_test "'ls > ; ../out' ; rm ../out"
		exec_test "'ls > | ../out' ; rm ../out"
		exec_test "'ls > || ../out' ; rm ../out"
		exec_test "'ls > & ../out' ; rm ../out"
		exec_test "'ls > && ../out' ; rm ../out"
		exec_test "'ls  < | ../out' ; rm ../out"
		exec_test "'ls >> | ../out' ; rm ../out"
		exec_test "'ls || | ../out' ; rm ../out"
		exec_test "'ls & | ../out' ; rm ../out"
		exec_test "'ls && | ../out' ; rm ../out"
		exec_test "'ls  < ; ../out' ; rm ../out"
		exec_test "'ls >> ; ../out' ; rm ../out"
		exec_test "'ls || ; ../out' ; rm ../out"
		exec_test "'ls & ; ../out' ; rm ../out"
		exec_test "'ls && ; ../out' ; rm ../out"
		exec_test "'ls  < > ../out' ; rm ../out"
		exec_test "'ls >> > ../out' ; rm ../out"
		exec_test "'ls || > ../out' ; rm ../out"
		exec_test "'ls && > ../out' ; rm ../out"
		exec_test "'ls '|' grep e > /out'"
		exec_test "'ls | 'grep e' > /out ; rm /out'"
		exec_test "'ls '| grep e' > /out ; rm /out'"
		exec_test "'ls '| grep e > /out' ; rm /out'"
		exec_test "'ls '|' grep e > .out'"
		exec_test "'ls | 'grep e' > .out ; rm .out'"
		exec_test "'ls '| grep e' > .out ; rm .out'"
		exec_test "'ls '| grep e > .out' ; rm .out'"
		exec_test "'ls '|' grep e > ./out'"
		exec_test "'ls | 'grep e' > ./out ; rm ./out'"
		exec_test "'ls '| grep e' > ./out ; rm ./out'"
		exec_test "'ls '| grep e > ./out' ; rm ./out'"
		exec_test "'ls '|' grep e > ../out'"
		exec_test "'ls | 'grep e' > ../out ; rm ../out'"
		exec_test "'ls '| grep e' > ../out ; rm ../out'"
		exec_test "'ls '| grep e > ../out' ; rm ../out'"
		exec_test "'ls \"|\" grep e > ../out'"
		exec_test "'ls | \"grep e\" > ../out ; rm ../out'"
		exec_test "'ls \"| grep e\" > ../out ; rm ../out'"
		exec_test "'ls \"| grep e > ../out\" ; rm ../out'"
		exec_test "'ls>out;cat<out|grep e|wc'"
		exec_test "'echo\>out|grep o|'"
	fi

	if [ -z "$2" ] || [ "$2" == "3" ] || [ "$1" == "all" ]; then
		exec_test "\"\""
		exec_test "\"\"\""
		exec_test "\" \""
		exec_test "\";\""
		exec_test "\">>\""
		exec_test "\"|\""
		exec_test "\"||\""
		exec_test "\"&\""
		exec_test "\"&&\""
		exec_test "\"\\\;\""
		exec_test "\"\\\ \""
		exec_test "\"\\\>>\""
		exec_test "\"\\\|\""
		exec_test "\"\\\||\""
		exec_test "\"\\\&\""
		exec_test "\"\\\&&\""
		exec_test "\"\\\\\\;\""
		exec_test "\"\\\\\\ \""
		exec_test "\"\\\\\\>>\""
		exec_test "\"\\\\\\|\""
		exec_test "\"\\\\\\||\""
		exec_test "\"\\\\\\&\""
		exec_test "\"\\\\\\&&\""
		exec_test "\"\\\\\\\\\\\;\""
		exec_test "\"\\\\\\\\\\\ \""
		exec_test "\"\\\\\\\\\\\>>\""
		exec_test "\"\\\\\\\\\\\|\""
		exec_test "\"\\\\\\\\\\\||\""
		exec_test "\"\\\\\\\\\\\&\""
		exec_test "\"\\\\\\\\\\\&&\""
		exec_test "\"/\""
		exec_test "\"//\""
		exec_test "\"\\\""
		exec_test "\"\\\\\""
		exec_test "\"\\\\\\\\\""
		exec_test "\"; ;\""
		exec_test "\";;\""
		exec_test "\";;;\""
		exec_test "\"; ;;\""
		exec_test "\";; ;\""
		exec_test "\"> >>\""
		exec_test "\">> >\""
		exec_test "\">> >>\""
		exec_test "\">>>>>>\""
		exec_test "\">> >>>>\""
		exec_test "\" < ;\""
		exec_test "\" < &\""
		exec_test "\" < |\""
		exec_test "\"| ;\""
		exec_test "\"|  < ../out\" ; rm ../out"
		exec_test "\"| > ../out\" ; rm ../out"
		exec_test "\"| >> ../out\" ; rm ../out"
		exec_test "\"| &\""
		exec_test "\"| |\""
		exec_test "\"| ls\""
		exec_test "\"& ;\""
		exec_test "\"&  < ../out\" ; rm ../out"
		exec_test "\"& > ../out\" ; rm ../out"
		exec_test "\"& >> ../out\" ; rm ../out"
		exec_test "\"& &\""
		exec_test "\"& |\""
		exec_test "\"ls ;\""
		exec_test "\"ls ; ls\""
		exec_test "\"ls ; ; ls\""
		exec_test "\"ls ;; ls\""
		exec_test "\"ls ; |\""
		exec_test "\"ls ; > ../out\" ; rm ../out"
		exec_test "\"ls ;; > ../out\" ; rm ../out"
		exec_test "\"ls |\""
		exec_test "\"ls ||\""
		exec_test "\"ls |  < ../out\" ; rm ../out"
		exec_test "\"ls | > ../out\" ; rm ../out"
		exec_test "\"ls | >> ../out\" ; rm ../out"
		exec_test "\"ls &\""
		exec_test "\"ls &&\""
		exec_test "\"ls | grep e >\""
		exec_test "\"ls | grep e > ../out\" ; rm ../out"
		exec_test "\"ls | grep e > ../out |\" ; rm ../out"
		exec_test "\"ls | grep e > ../out &\" ; rm ../out"
		exec_test "\"ls &  < ../out\" ; rm ../out"
		exec_test "\"ls & > ../out\" ; rm ../out"
		exec_test "\"ls & >> ../out\" ; rm ../out"
		exec_test "\"; ls\""
		exec_test "\"; ls ls\""
		exec_test "\"; ; ls\""
		exec_test "\";; ls\""
		exec_test "\"; ls |\""
		exec_test "\"; | ls\""
		exec_test "\"; ls > ../out\" ; rm ../out"
		exec_test "\"| ls  < ../out\" ; rm ../out"
		exec_test "\"| ls > ../out\" ; rm ../out"
		exec_test "\"| ls >> ../out\" ; rm ../out"
		exec_test "\"& ls\""
		exec_test "\"&& ls\""
		exec_test "\"& ls  < ../out\" ; rm ../out"
		exec_test "\"& ls > ../out\" ; rm ../out"
		exec_test "\"& ls >> ../out\" ; rm ../out"
		exec_test "\"ls | ; ../out\" ; rm ../out"
		exec_test "\"ls | | ../out\" ; rm ../out"
		exec_test "\"ls | || ../out\" ; rm ../out"
		exec_test "\"ls | & ../out\" ; rm ../out"
		exec_test "\"ls | && ../out\" ; rm ../out"
		exec_test "\"ls ;  < ../out\" ; rm ../out"
		exec_test "\"ls ; >> ../out\" ; rm ../out"
		exec_test "\"ls ; ; ../out\" ; rm ../out"
		exec_test "\"ls ; | ../out\" ; rm ../out"
		exec_test "\"ls ; || ../out\" ; rm ../out"
		exec_test "\"ls ; & ../out\" ; rm ../out"
		exec_test "\"ls ; && ../out\" ; rm ../out"
		exec_test "\"ls >  < ../out\" ; rm ../out"
		exec_test "\"ls > > ../out\" ; rm ../out"
		exec_test "\"ls > >> ../out\" ; rm ../out"
		exec_test "\"ls > ; ../out\" ; rm ../out"
		exec_test "\"ls > | ../out\" ; rm ../out"
		exec_test "\"ls > || ../out\" ; rm ../out"
		exec_test "\"ls > & ../out\" ; rm ../out"
		exec_test "\"ls > && ../out\" ; rm ../out"
		exec_test "\"ls  < | ../out\" ; rm ../out"
		exec_test "\"ls >> | ../out\" ; rm ../out"
		exec_test "\"ls || | ../out\" ; rm ../out"
		exec_test "\"ls & | ../out\" ; rm ../out"
		exec_test "\"ls && | ../out\" ; rm ../out"
		exec_test "\"ls  < ; ../out\" ; rm ../out"
		exec_test "\"ls >> ; ../out\" ; rm ../out"
		exec_test "\"ls || ; ../out\" ; rm ../out"
		exec_test "\"ls & ; ../out\" ; rm ../out"
		exec_test "\"ls && ; ../out\" ; rm ../out"
		exec_test "\"ls  < > ../out\" ; rm ../out"
		exec_test "\"ls >> > ../out\" ; rm ../out"
		exec_test "\"ls || > ../out\" ; rm ../out"
		exec_test "\"ls && > ../out\" ; rm ../out"
		exec_test "\"ls '|' grep e > /out\""
		exec_test "\"ls | 'grep e' > /out ; rm /out\""
		exec_test "\"ls '| grep e' > /out ; rm /out\""
		exec_test "\"ls '| grep e > /out' ; rm /out\""
		exec_test "\"ls '|' grep e > .out\""
		exec_test "\"ls | 'grep e' > .out ; rm .out\""
		exec_test "\"ls '| grep e' > .out ; rm .out\""
		exec_test "\"ls '| grep e > .out' ; rm .out\""
		exec_test "\"ls '|' grep e > ./out\""
		exec_test "\"ls | 'grep e' > ./out ; rm ./out\""
		exec_test "\"ls '| grep e' > ./out ; rm ./out\""
		exec_test "\"ls '| grep e > ./out' ; rm ./out\""
		exec_test "\"ls '|' grep e > ../out\""
		exec_test "\"ls | 'grep e' > ../out ; rm ../out\""
		exec_test "\"ls '| grep e' > ../out ; rm ../out\""
		exec_test "\"ls '| grep e > ../out' ; rm ../out\""
		exec_test "\"ls \"|\" grep e > ../out\""
		exec_test "\"ls | \"grep e\" > ../out ; rm ../out\""
		exec_test "\"ls \"| grep e\" > ../out ; rm ../out\""
		exec_test "\"ls \"| grep e > ../out\" ; rm ../out\""
		exec_test "\"ls>out;cat<out|grep e|wc\""
		exec_test "\"echo\>out|grep o\""
	fi
fi

### PARSING TOKEN
if [ "$1" == "token" ] || [ "$1" == "all" ]; then
	exec_test "abc"
	exec_test " abc"
	exec_test "abc "
	exec_test "'abc '"
	exec_test "abc\'"
	exec_test "abc\""
	exec_test "'"
	exec_test "''"
	exec_test "\'"
	exec_test "\'\'"
	exec_test "\\\'"
	exec_test "\""
	exec_test "\"\""
	exec_test "\\\""
	exec_test "\\"
	exec_test "\ "
	exec_test "\t"
	exec_test "\n"
	exec_test "\abc"
	exec_test "\\\abc"
	exec_test "\\\\\\\abc"
	exec_test "\\\\\\\\\\\abc"
	exec_test "$"
	exec_test "a  $"
	exec_test "$  a"
	exec_test "\'a  $\'"
	exec_test "\"a  $\""
	exec_test "\$USER"
	exec_test "\\\$USER"
	exec_test "\\\\\\\$USER"
	exec_test "\\\\\\\\\\\$USER"
	exec_test "\\\\\\\\\\\\\\\$USER"
	exec_test "\\ \$USER"
	exec_test "\\\\\\ \$USER"
	exec_test "\\\\\\\\\\ \$USER"
	exec_test "\\\\\\\\\\\\\\ \$USER"
	exec_test "\$VAR"
	exec_test "\\\$VAR"
	exec_test "\\\\\\\$VAR"
	exec_test "\\\\\\\\\\\$VAR"
	exec_test "\\\\\\\\\\\\\\\$VAR"
	exec_test "\\ \$VAR"
	exec_test "\\\\\\ \$VAR"
	exec_test "\\\\\\\\\\ \$VAR"
	exec_test "\\\\\\\\\\\\\\ \$VAR"
	exec_test "\$LOGNAME\$PWD\$USER"
	exec_test "\$LOGNAME\$PWD\$USER$"
	exec_test "\$LOGNAME\\\$PWD\$USER$"
	exec_test "Hi\$USERok"
	exec_test "Hi"\$USER"ok"
	exec_test "Hi"\$"USERok"
	exec_test "echo \$1TEST"
	exec_test "echo test$"
	exec_test "echo \$test"
	exec_test "echo $ test"
	exec_test "echo test$"
	exec_test "echo test \$test"
	exec_test "echo test$ test"
	exec_test "echo test \$test"
	exec_test "echo test\$test"
	exec_test "echo test \$test"
	exec_test "echo test\$ test"
	exec_test "echo test\$test"
	exec_test "echo test\$test"
	exec_test "echo test\$test"
	exec_test "echo 'test$'"
	exec_test "echo '\$test'"
	exec_test "echo '$ test'"
	exec_test "echo 'test$'"
	exec_test "echo 'test' $'test'"
	exec_test "echo 'test'$ 'test'"
	exec_test "echo 'test' $'test'"
	exec_test "echo 'test'$'test'"
	exec_test "echo 'test' '\$test'"
	exec_test "echo 'test\$' 'test'"
	exec_test "echo test'\$'test"
	exec_test "echo test\$'test'"
	exec_test "echo 'test\$'test"
	exec_test "echo \"test$\""
	exec_test "echo \"\$test\""
	exec_test "echo \"$ test\""
	exec_test "echo \"test$\""
	exec_test "echo \"test\" $\"test\""
	exec_test "echo \"test\"$ \"test\""
	exec_test "echo \"test\" $\"test\""
	exec_test "echo \"test\"$\"test\""
	exec_test "echo \"test\" \"\$test\""
	exec_test "echo \"test\$\" \"test\""
	exec_test "echo test\"\$\"test"
	exec_test "echo test\$\"test\""
	exec_test "echo \"test\$\"test"

	exec_test "'abc'"
	exec_test "' abc'"
	exec_test "'abc '"
	exec_test "''abc ''"
	exec_test "'abc\''"
	exec_test "'abc\"'"
	exec_test "'''"
	exec_test "'\''"
	exec_test "'\\\''"
	exec_test "'\"'"
	exec_test "'\"\"'"
	exec_test "'\\\"'"
	exec_test "'\'"
	exec_test "'\ '"
	exec_test "'\t'"
	exec_test "'\n'"
	exec_test "'\abc'"
	exec_test "'\\\abc'"
	exec_test "'\\\\\\\abc'"
	exec_test "'\\\\\\\\\\\abc'"
	exec_test "'$'"
	exec_test "'a  $'"
	exec_test "'$  a'"
	exec_test "'\$USER'"
	exec_test "'\\\$USER'"
	exec_test "'\\\\\\\$USER'"
	exec_test "'\\\\\\\\\\\$USER'"
	exec_test "'\\\\\\\\\\\\\\\$USER'"
	exec_test "'\\ \$USER'"
	exec_test "'\\\\\\ \$USER'"
	exec_test "'\\\\\\\\\\ \$USER'"
	exec_test "'\\\\\\\\\\\\\\ \$USER'"
	exec_test "'\$VAR'"
	exec_test "'\\\$VAR'"
	exec_test "'\\\\\\\$VAR'"
	exec_test "'\\\\\\\\\\\$VAR'"
	exec_test "'\\\\\\\\\\\\\\\$VAR'"
	exec_test "'\\ \$VAR'"
	exec_test "'\\\\\\ \$VAR'"
	exec_test "'\\\\\\\\\\ \$VAR'"
	exec_test "'\\\\\\\\\\\\\\ \$VAR'"
	exec_test "'\$LOGNAME\$PWD\$USER'"
	exec_test "'\$LOGNAME\$PWD\$USER$'"
	exec_test "'\$LOGNAME\\\$PWD\$USER$'"
	exec_test "'Hi\$USERok'"
	exec_test "'Hi"\$USER"ok'"
	exec_test "'Hi"\$"USERok'"
	exec_test "'echo \$1TEST'"
	exec_test "'echo test$'"
	exec_test "'echo \$test'"
	exec_test "'echo $ test'"
	exec_test "'echo test$'"
	exec_test "'echo test \$test'"
	exec_test "'echo test$ test'"
	exec_test "'echo test \$test'"
	exec_test "'echo test\$test'"
	exec_test "'echo test \$test'"
	exec_test "'echo test\$ test'"
	exec_test "'echo test\$test'"
	exec_test "'echo test\$test'"
	exec_test "'echo test\$test'"
	exec_test "'echo 'test$''"
	exec_test "'echo '\$test''"
	exec_test "'echo '$ test''"
	exec_test "'echo 'test$''"
	exec_test "'echo 'test' $'test''"
	exec_test "'echo 'test'$ 'test''"
	exec_test "'echo 'test' $'test''"
	exec_test "'echo 'test'$'test''"
	exec_test "'echo 'test' '\$test''"
	exec_test "'echo 'test\$' 'test''"
	exec_test "'echo test'\$'test'"
	exec_test "'echo test\$'test''"
	exec_test "'echo 'test\$'test'"
	exec_test "'echo \"test$\"'"
	exec_test "'echo \"\$test\"'"
	exec_test "'echo \"$ test\"'"
	exec_test "'echo \"test$\"'"
	exec_test "'echo \"test\" $\"test\"'"
	exec_test "'echo \"test\"$ \"test\"'"
	exec_test "'echo \"test\" $\"test\"'"
	exec_test "'echo \"test\"$\"test\"'"
	exec_test "'echo \"test\" \"\$test\"'"
	exec_test "'echo \"test\$\" \"test\"'"
	exec_test "'echo test\"\$\"test'"
	exec_test "'echo test\$\"test\"'"
	exec_test "'echo \"test\$\"test'"

	exec_test "\"abc\""
	exec_test "\" abc\""
	exec_test "\"abc \""
	exec_test "\"'abc '\""
	exec_test "\"abc\'\""
	exec_test "\"abc\"\""
	exec_test "\"'\""
	exec_test "\"''\""
	exec_test "\"\'\""
	exec_test "\"\\\'\""
	exec_test "\"\"\""
	exec_test "\"\\\"\""
	exec_test "\"\\\""
	exec_test "\"\ \""
	exec_test "\"\t\""
	exec_test "\"\n\""
	exec_test "\"\abc\""
	exec_test "\"\\\abc\""
	exec_test "\"\\\\\\\abc\""
	exec_test "\"\\\\\\\\\\\abc\""
	exec_test "\"$\""
	exec_test "\"a  $\""
	exec_test "\"$  a\""
	exec_test "\"\$USER\""
	exec_test "\"\\\$USER\""
	exec_test "\"\\\\\\\$USER\""
	exec_test "\"\\\\\\\\\\\$USER\""
	exec_test "\"\\\\\\\\\\\\\\\$USER\""
	exec_test "\"\\ \$USER\""
	exec_test "\"\\\\\\ \$USER\""
	exec_test "\"\\\\\\\\\\ \$USER\""
	exec_test "\"\\\\\\\\\\\\\\ \$USER\""
	exec_test "\"\$VAR\""
	exec_test "\"\\\$VAR\""
	exec_test "\"\\\\\\\$VAR\""
	exec_test "\"\\\\\\\\\\\$VAR\""
	exec_test "\"\\\\\\\\\\\\\\\$VAR\""
	exec_test "\"\\ \$VAR\""
	exec_test "\"\\\\\\ \$VAR\""
	exec_test "\"\\\\\\\\\\ \$VAR\""
	exec_test "\"\\\\\\\\\\\\\\ \$VAR\""
	exec_test "\"\$LOGNAME\$PWD\$USER\""
	exec_test "\"\$LOGNAME\$PWD\$USER$\""
	exec_test "\"\$LOGNAME\\\$PWD\$USER$\""
	exec_test "\"Hi\$USERok\""
	exec_test "\"Hi"\$USER"ok\""
	exec_test "\"Hi"\$"USERok\""
	exec_test "\"echo \$1TEST\""
	exec_test "\"echo test$\""
	exec_test "\"echo \$test\""
	exec_test "\"echo $ test\""
	exec_test "\"echo test$\""
	exec_test "\"echo test \$test\""
	exec_test "\"echo test$ test\""
	exec_test "\"echo test \$test\""
	exec_test "\"echo test\$test\""
	exec_test "\"echo test \$test\""
	exec_test "\"echo test\$ test\""
	exec_test "\"echo test\$test\""
	exec_test "\"echo test\$test\""
	exec_test "\"echo test\$test\""
	exec_test "\"echo 'test$'\""
	exec_test "\"echo '\$test'\""
	exec_test "\"echo '$ test'\""
	exec_test "\"echo 'test$'\""
	exec_test "\"echo 'test' $'test'\""
	exec_test "\"echo 'test'$ 'test'\""
	exec_test "\"echo 'test' $'test'\""
	exec_test "\"echo 'test'$'test'\""
	exec_test "\"echo 'test' '\$test'\""
	exec_test "\"echo 'test\$' 'test'\""
	exec_test "\"echo test'\$'test\""
	exec_test "\"echo test\$'test'\""
	exec_test "\"echo 'test\$'test\""
	exec_test "\"echo \"test$\"\""
	exec_test "\"echo \"\$test\"\""
	exec_test "\"echo \"$ test\"\""
	exec_test "\"echo \"test$\"\""
	exec_test "\"echo \"test\" $\"test\"\""
	exec_test "\"echo \"test\"$ \"test\"\""
	exec_test "\"echo \"test\" $\"test\"\""
	exec_test "\"echo \"test\"$\"test\"\""
	exec_test "\"echo \"test\" \"\$test\"\""
	exec_test "\"echo \"test\$\" \"test\"\""
	exec_test "\"echo test\"\$\"test\""
	exec_test "\"echo test\$\"test\"\""
	exec_test "\"echo \"test\$\"test\""
fi

### ECHO TESTS
if [ "$1" == "echo" ] || [ "$1" == "all" ]; then
	exec_test "echo"
	exec_test "echo"
	exec_test "echo "
	exec_test "echo test"
	exec_test "echo test tout"
	exec_test "echo test      tout"
	exec_test "echo -n"
	exec_test "echo -n Salut!"
	exec_test "echo -n test tout"
	exec_test "echo -n -n -n test tout"
	exec_test "echo -n -nnnn"
	exec_test "echo -n -nnnn -nna"
	exec_test "echo -n -nnn hello -n ; echo a"
	exec_test "echo -n -nna ; echo b"
	exec_test "echo ~"
	exec_test "echo ~/"
	exec_test "echo /~"
	exec_test "'echo '"
	exec_test "echo\ "
	exec_test "echo $"
	exec_test "echo \$USER"
	exec_test "echo \$USER\$PWD"
	exec_test "echo \$SHLVL\$USER\$PWD\$LOGNAME"
	exec_test "echo \$SHLVL\$USER\$PWD\\\$LOGNAME"
	exec_test "echo \$USER\$TEST\$PWD"
	exec_test "echo \$SHLVL\$TEST\$USER\$PWD\$LOGNAME"
	exec_test "echo \$SHLVL\$TEST\$USER\$PWD\\\$LOGNAME"
	exec_test "echo    \$TEST lol \$TEST"
	exec_test "echo \$TEST \$TEST"
	exec_test "echo test     \    test"
	exec_test "echo \'test"
	exec_test "echo \"test"
	exec_test "echo \$TEST"
	exec_test "echo \$TEST\$TEST\$TEST"
	exec_test "echo \$TEST\$TEST=lol\$TEST"
	exec_test "echo $\TEST\$TEST=lol\$TEST""lol"
	exec_test "echo    \$TEST lol \$TEST"
	exec_test "echo test "" test "" test"
	exec_test "echo \$TEST"
	exec_test "echo $=TEST"
	exec_test "echo $'=TEST'"
	exec_test "echo $\"=TEST\""
	exec_test "echo $"
	exec_test "echo '$'"
	exec_test "echo \"$\""
	exec_test "echo \$T1TEST"
	exec_test "echo test\$\$T1TEST"
	exec_test "echo 'test'\$'\$T1TEST'"
	exec_test "echo \"test\"\$\"\$T1TEST\""
	exec_test "echo    \$USER lol \$USER"
	exec_test "echo \$USER \$USER"
	exec_test "echo user     \    user"
	exec_test "echo \'user"
	exec_test "echo \"user"
	exec_test "echo \$USER"
	exec_test "echo \$USER\$USER\$USER"
	exec_test "echo \$USER\$USER=lol\$USER"
	exec_test "echo $\TEST\$USER=lol\$USER""lol"
	exec_test "echo    \$USER lol \$USER"
	exec_test "echo user "" user "" user"
	exec_test "echo \$USER"
	exec_test "echo $=USER"
	exec_test "echo $'=USER'"
	exec_test "echo $\"=USER\""
	exec_test "echo $"
	exec_test "echo '$'"
	exec_test "echo \"$\""
	exec_test "echo \$T1USER"
	exec_test "echo user\$\$T1USER"
	exec_test "echo 'user'\$'\$T1USER'"
	exec_test "echo \"user\"\$\"\$T1USER\""

	exec_test "'echo'"
	exec_test "'echo'"
	exec_test "'echo '"
	exec_test "echo 'test'"
	exec_test "echo 'test tout'"
	exec_test "echo 'test      tout'"
	exec_test "echo '-n'"
	exec_test "echo '-n Salut!'"
	exec_test "echo '-n test tout'"
	exec_test "echo '-n -n -n test tout'"
	exec_test "echo '-n -nnnn'"
	exec_test "echo '-n -nnnn -nna'"
	exec_test "echo '-n -nnn hello -n ; echo a'"
	exec_test "echo '-n -nna ; echo b'"
	exec_test "echo '~'"
	exec_test "echo '~/'"
	exec_test "echo '/~'"
	exec_test "'echo '''"
	exec_test "echo\' '"
	exec_test "echo '$'"
	exec_test "echo '\$USER'"
	exec_test "echo '\$USER\$PWD'"
	exec_test "echo '\$SHLVL\$USER\$PWD\$LOGNAME'"
	exec_test "echo '\$SHLVL\$USER\$PWD\\\$LOGNAME'"
	exec_test "echo '\$USER\$TEST\$PWD'"
	exec_test "echo '\$SHLVL\$TEST\$USER\$PWD\$LOGNAME'"
	exec_test "echo '\$SHLVL\$TEST\$USER\$PWD\\\$LOGNAME'"
	exec_test "echo '   \$TEST lol \$TEST'"
	exec_test "echo '\$TEST \$TEST'"
	exec_test "echo 'test     \    test'"
	exec_test "echo '\'test'"
	exec_test "echo '\"test'"
	exec_test "echo '\$TEST'"
	exec_test "echo '\$TEST\$TEST\$TEST'"
	exec_test "echo '\$TEST\$TEST=lol\$TEST'"
	exec_test "echo '$\TEST\$TEST=lol\$TEST""lol'"
	exec_test "echo '   \$TEST lol \$TEST'"
	exec_test "echo 'test "" test "" test'"
	exec_test "echo '\$TEST'"
	exec_test "echo '$=TEST'"
	exec_test "echo '$'=TEST''"
	exec_test "echo '$\"=TEST\"'"
	exec_test "echo '$'"
	exec_test "echo ''$''"
	exec_test "echo '\"$\"'"
	exec_test "echo '\$T1TEST'"
	exec_test "echo test\$\$T1TEST"
	exec_test "echo 'test'\$'\$T1TEST'"
	exec_test "echo \"test\"\$\"\$T1TEST\""
	exec_test "echo '   \$USER lol \$USER'"
	exec_test "echo '\$USER \$USER'"
	exec_test "echo 'user     \    user'"
	exec_test "echo '\'user'"
	exec_test "echo '\"user'"
	exec_test "echo '\$USER'"
	exec_test "echo '\$USER\$USER\$USER'"
	exec_test "echo '\$USER\$USER=lol\$USER'"
	exec_test "echo '$\TEST\$USER=lol\$USER""lol'"
	exec_test "echo '   \$USER lol \$USER'"
	exec_test "echo 'user "" user "" user'"
	exec_test "echo '\$USER'"
	exec_test "echo '$=USER'"
	exec_test "echo '$'=USER''"
	exec_test "echo '$\"=USER\"'"
	exec_test "echo '$'"
	exec_test "echo ''$''"
	exec_test "echo '\"$\"'"
	exec_test "echo '\$T1USER'"
	exec_test "echo 'user\$\$T1USER'"
	exec_test "echo ''user'\$'\$T1USER''"
	exec_test "echo '\"user\"\$\"\$T1USER\"'"

	exec_test "echo\\"""
	exec_test "echo\\"""
	exec_test "echo \"\""
	exec_test "echo \"test\""
	exec_test "echo \"test tout\""
	exec_test "echo \"test      tout\""
	exec_test "echo \"-n\""
	exec_test "echo \"-n Salut!\""
	exec_test "echo \"-n test tout\""
	exec_test "echo \"-n -n -n test tout\""
	exec_test "echo \"-n -nnnn\""
	exec_test "echo \"-n -nnnn -nna\""
	exec_test "echo \"-n -nnn hello -n ; echo a\""
	exec_test "echo \"-n -nna ; echo b\""
	exec_test "echo \"~\""
	exec_test "echo \"~/\""
	exec_test "echo \"/~\""
	exec_test "'echo \"'\""
	exec_test "echo\" \""
	exec_test "echo \"$\""
	exec_test "echo \"\$USER\""
	exec_test "echo \"\$USER\$PWD\""
	exec_test "echo \"\$SHLVL\$USER\$PWD\$LOGNAME\""
	exec_test "echo \"\$SHLVL\$USER\$PWD\\\$LOGNAME\""
	exec_test "echo \"\$USER\$TEST\$PWD\""
	exec_test "echo \"\$SHLVL\$TEST\$USER\$PWD\$LOGNAME\""
	exec_test "echo \"\$SHLVL\$TEST\$USER\$PWD\\\$LOGNAME\""
	exec_test "echo \"   \$TEST lol \$TEST\""
	exec_test "echo \"\$TEST \$TEST\""
	exec_test "echo \"test     \    test\""
	exec_test "echo \"\'test\""
	exec_test "echo \"\"test\""
	exec_test "echo \"\$TEST\""
	exec_test "echo \"\$TEST\$TEST\$TEST\""
	exec_test "echo \"\$TEST\$TEST=lol\$TEST\""
	exec_test "echo \"$\TEST\$TEST=lol\$TEST""lol\""
	exec_test "echo \"   \$TEST lol \$TEST\""
	exec_test "echo \"test "" test "" test\""
	exec_test "echo \"\$TEST\""
	exec_test "echo \"$=TEST\""
	exec_test "echo \"$'=TEST'\""
	exec_test "echo \"$\"=TEST\"\""
	exec_test "echo \"$\""
	exec_test "echo \"\$T1TEST\""
	exec_test "echo \"'$'\""
	exec_test "echo \"\"$\"\""
	exec_test "echo test\$\$T1TEST"
	exec_test "echo 'test'\$'\$T1TEST'"
	exec_test "echo \"test\"\$\"\$T1TEST\""
	exec_test "echo \"   \$USER lol \$USER\""
	exec_test "echo \"\$USER \$USER\""
	exec_test "echo \"user     \    user\""
	exec_test "echo \"\'user\""
	exec_test "echo \"\"user\""
	exec_test "echo \"\$USER\""
	exec_test "echo \"\$USER\$USER\$USER\""
	exec_test "echo \"\$USER\$USER=lol\$USER\""
	exec_test "echo \"$\TEST\$USER=lol\$USER""lol\""
	exec_test "echo \"   \$USER lol \$USER\""
	exec_test "echo \"user "" user "" user\""
	exec_test "echo \"\$USER\""
	exec_test "echo \"$=USER\""
	exec_test "echo \"$'=USER'\""
	exec_test "echo \"$\"=USER\"\""
	exec_test "echo \"$\""
	exec_test "echo \"'$'\""
	exec_test "echo \"\"$\"\""
	exec_test "echo \"\$T1USER\""
	exec_test "echo \"user\$\$T1USER\""
	exec_test "echo \"'user'\$'\$T1USER'\""
	exec_test "echo \"\"user\"\$\"\$T1USER\"\""
fi

### CD TESTS
if [ "$1" == "cd" ] || [ "$1" == "all" ]; then
	exec_test "cd"
	exec_test "cd ~"
	exec_test "cd ''"
	exec_test "cd \"\""
	exec_test "cd incs"
	exec_test "cd /bin/"
	exec_test "cd ./incs"
	exec_test "cd ."
	exec_test "cd .."
	exec_test "cd /"
	exec_test "cd /Users"
	exec_test "cd ./minishell"
	exec_test "cd \$HOME"
	exec_test "cd ~/Desktop"
	exec_test "mkdir dir ; chmod 000 dir ; cd dir ; rm dir"
	exec_test "mkdir dir ; chmod 222 dir ; cd dir ; rm dir"
	exec_test "mkdir dir ; chmod 333 dir ; cd dir ; rm dir"
	exec_test "mkdir dir; cd dir; rm -r ../dir; cd ../"
	exec_test "export VAR1=1 VAR2=2 VAR3=3 ; cd \$VAR1 \$VAR2 \$VAR3"
	exec_test 'cd $VAR1 $VAR2 $VAR3'
	exec_test "mkdir a; mkdir a/b; mkdir a/b/c; mkdir a/b/c/d; mkdir a/b/c/d/e; cd a/b; cd c/d/e ; pwd ; cd ../../../../../ ; pwd"
fi

### PWD TESTS
if [ "$1" == "pwd" ] || [ "$1" == "all" ]; then
	exec_test "pwd"
	exec_test "pwd incs"
	exec_test "cd incs ; pwd"
	exec_test "cd ../../incs ; pwd"
	exec_test "pwd 123"
	exec_test "export PWD=1; pwd"
	exec_test "unset PWD; pwd"
	exec_test "mkdir a; mkdir a/b ; cd a/b ; rm ../../a; pwd"
	exec_test 'mkdir test_dir ; cd test_dir ; rm -rf ../test_dir ; cd . ; pwd ; cd . ; pwd ; cd .. ; pwd'
	exec_test "mkdir a; mkdir a/b; cd a/b; rm -r ../../a; cd .. ; pwd ; unset PWD ; pwd"
	exec_test "mkdir a; mkdir a/b; cd a/b; rm -r ../../a; cd .. ; pwd"
fi

### EXIT TESTS
if [ "$1" == "exit" ] || [ "$1" == "all" ]; then
	exec_test "exit 9223372036854775808"
	exec_test "exit -9223372036854775808"
	exec_test "exit +9223372036854775808"
	exec_test "exit 93372036854775808"
	exec_test "exit -94223372036854775808"
	exec_test "exit 922337203assadads6854775808"
	exec_test "exit -9223372036854775810"
	exec_test "exit -92233720368547758106546465464"
	exec_test "exit 92233720368547758106546465464"
	exec_test "exit 5 | ls"
	exec_test "niania ; exit"
	exec_test "ls -la | wtf"
	exec_test "cd gdhahahad"
	exec_test "gdagadgag"
	exec_test "exit 42"
	exec_test "exit 42 53 68"
	exec_test "exit 259"
	exec_test "exit 9223372036854775807"
	exec_test "exit -9223372036854775808"
	exec_test "exit -4"
	exec_test "exit wrong"
	exec_test "exit wrong_command"
	exec_test "ls -Z"
	exec_test "ls ; exit"
	exec_test "exit ; ls"
	exec_test "exit ; lsfwe"
	exec_test "exit ;; lsfwe"
	exec_test "owief ; exit 5"
	exec_test "exit ||| lsfwe"
	exec_test "exit 4 ; ls"
	exec_test "exit -"
	exec_test "exit 1 2 a"
	exec_test "exit a 1 2"
	exec_test "ls | exit 5exit 5 | ls"
	exec_test "ls | exit 5"
	exec_test "exit | ls"
	exec_test "exit 45 | ls"
	exec_test "exit | ijwg ; exit"
	exec_test "exit 9 ; exit 90"
	exec_test "exit 0"
	exec_test "exit 1"
	exec_test "exit 256"
	exec_test "exit 257"
	exec_test "exit 310"
	exec_test "exit -310"
	exec_test "exit | exit"
	exec_test "exit | exit"
fi

### EXPORT TESTS
if [ "$1" == "export" ] || [ "$1" == "all" ]; then
	NEWPATH="PATH=$PATH"
	NEWOLDPWD="OLDPWD=/incs"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export \$VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export ''"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export \"\""
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export \"\" VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR1= ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR1=1 ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR VAR1 ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR VAR11=1 VAR1 ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR VAR= VARR VAR=1 ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=\$USER ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export 1VAR 2VAR="
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export _VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export *VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export \$VAR=s\ -la ; l\$VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export ="
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export ='"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export =\""
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export 1TEST= ;"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export TEST ;"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export ""="" ; "
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export TES=T="" ;"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export TE+S=T="" ;"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export TEST=LOL ; echo \$TEST ;"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export TEST=LOL ; echo \$TEST\$TEST\$TEST=lol\$TEST"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export TEST=LOL; export TEST+=LOL ; echo \$TEST ;"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export TEST=\"ls       -l     - a\" ; echo \$TEST ; \$LS ; "
fi

### UNSET TESTS
if [ "$1" == "unset" ] || [ "$1" == "all" ]; then
	NEWPATH="PATH=$PATH"
	NEWOLDPWD="OLDPWD=/incs"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset \$USER"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset ''"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset \"\""
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset USER ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset \"\" VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset USER \"\""
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset USER1 ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset USER ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset USER1 USER ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset USER11 ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset USER ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset PATH ; export PATH=/bin:/usr/ ; ls"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset PATH ; export PATH \"/bin:/usr/\" ; ls"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset NOEXIST"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset 1USER"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset _USER ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset *USER"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset \$USER=s\ -la ; l\$USER"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset SHLVL ; bash; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset \$VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset \"\""
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset VAR \"\""
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset VAR1 ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset VAR1 VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset VAR11 ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset NOEXIST"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset 1VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset _VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset *VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset \$VAR=s\ -la ; l\$VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; unset SHLVL ; bash; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset \$VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset \"\""
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset VAR \"\""
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset VAR1 ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset VAR1 VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset VAR11 ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset NOEXIST"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset 1VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset _VAR ; export"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset *VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset \$VAR=s\ -la ; l\$VAR"
	exec_test "export $NEWPATH ; export $NEWOLDPWD ; export VAR=Ukulele ; unset SHLVL ; bash; export"
fi

### ENV TESTS
if [ "$1" == "env" ] || [ "$1" == "all" ]; then
	NEWPATH="PATH=$PATH"
	exec_test "export $NEWPATH ; export OLDPWD ; env"
	exec_test "export $NEWPATH ; export OLDPWD ; env \$VAR"
	exec_test "export $NEWPATH ; export OLDPWD ; env token"
	exec_test "export $NEWPATH ; export OLDPWD ; env 123"
	exec_test "export $NEWPATH ; export OLDPWD ; unset PWD ; env"
	exec_test "export $NEWPATH ; export OLDPWD ; unset PWD ; env ; unset FOO ; env"
	exec_test "export $NEWPATH ; export OLDPWD ; unset PWD ; env ; unset PATH ; env"
	exec_test "export $NEWPATH ; export OLDPWD ; ls ; echo \$_"
	exec_test "export $NEWPATH ; export OLDPWD ; ls ; echo \$_ ; env"
	exec_test "export $NEWPATH ; export OLDPWD ; ls ; env ; echo \$_ ; env"
	exec_test "export $NEWPATH ; export OLDPWD ; echo salut toi ; echo \$_ ; env"
fi

# rm lol ls file noexist exist out2 out3 a b
# rm minishell

# DEL=$(ls | tr "\n" " " | grep -v $FILES)
# if [ "$1" == "del" ] || [ "$1" == "all" ]; then
# 	for variable in $DEL
# 	do
# 		# chmod 777 $variable
# 		echo $variable
# 	done
# fi
# unset FILES
# unset DEL
